# Leetcode 
"""Input: words = ["This", "is", "an", "example", "of", "text", "justification."], maxWidth = 16
Output:
[
   "This    is    an",
   "example  of text",
   "justification.  "
]"""
from typing import List
class Solution:
    def fullJustify(self, words: List[str], maxWidth: int) -> List[str]:
        res=[]
        line, length=[],0
        i=0
        while i<len(words):
            #if line is complete
            if length+len(line)+len(words[i])>maxWidth:
                extra_space=  maxWidth - length
                spaces =  extra_space//max(1,len(line)-1)
                remainder=extra_space % max(1,len(line)-1)
                for j in range(max(1,len(line)-1)):
                    line[j]+=" " * spaces
                    if remainder:
                        line[j]+=" " * spaces
                        remainder -= 1
                    
                res.append("".join(line))

            line.append(words[i])
            length+=len(words[i])
            i+=1
        
        last_line = " ".join(line)
        trailing_space = maxWidth-len(last_line)
        last_line+= " "*trailing_space
        res.append(last_line)
        return res

        



                

            # if line is not complete








