from typing import List
class Solution:
    def __init__(self):
        self.res=0 # Instance variable to store the result
    def maxProduct(self, s:str) ->int:
        strArr=list(s)
        def dfs(strArr:List[str],i:int,s1:str,s2:str):
            if i>=len(strArr):
                if isPalindromic(s1) and  isPalindromic(s2):
                    self.res = max(self.res,len(s1)*len(s2))
                return
            
            dfs(strArr,i+1,s1+strArr[i],s2)
            dfs(strArr,i+1,s1,s2+strArr[i])
            dfs(strArr,i+1,s1,s2)
        
        def isPalindromic(s:str) ->bool:
            r=len(s)-1
            for l in range(len(s)):
                if l>=r:
                    break
                if s[l]!=s[r]:
                    return False
                r-=1
            return True
        dfs(strArr,0,"","")
        return self.res
sol= Solution()
print(sol.maxProduct("abac"))  # Example output
print(sol.maxProduct("acdapmpomp"))  # Example output



        
